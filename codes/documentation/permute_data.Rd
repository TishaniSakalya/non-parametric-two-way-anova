% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permute_data.R
\name{permute_data}
\alias{permute_data}
\title{Permute Columns of a Data Table}
\usage{
permute_data(data, type)
}
\arguments{
\item{data}{A data.table containing the columns to be permuted.}

\item{type}{A character string specifying the type of permutation. One of:
\item "main_A": Permutes column `A`.
\item "main_B": Permutes column `B`.
\item "interaction": Permutes column `Y`.}
}
\value{
A data.table with the specified column permuted, maintaining the factor
  levels of columns `A` and `B`.
}
\description{
This function performs permutation (shuffling) of columns in a data table
based on the specified type of permutation. The types available are "main_A",
"main_B", and "interaction", which control how the columns are shuffled:
}
\details{
\itemize{
  \item "main_A": Shuffles values in column `A`.
  \item "main_B": Shuffles values in column `B`.
  \item "interaction": Shuffles values in column `Y`.
}

The function ensures that the factor levels of columns `A` and `B` are preserved
after shuffling.


  The function creates a copy of the input data to prevent modifying the original
  dataset. After the shuffling, it ensures that factor levels of columns `A` and `B`
  are maintained for consistency.
}
\examples{
# Sample data.table
data <- data.table(A = factor(c('low', 'medium', 'high', 'low', 'high')),
                   B = factor(c('red', 'blue', 'red', 'blue', 'red')),
                   Y = c(10, 20, 30, 40, 50))

# Permute column A
permuted_data_A <- permute_data(data, "main_A")

# Permute column B
permuted_data_B <- permute_data(data, "main_B")

# Permute column Y
permuted_data_Y <- permute_data(data, "interaction")
}
